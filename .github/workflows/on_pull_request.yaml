name: Terraform checks on pull request

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.SUDOBLARK_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SUDOBLARK_AWS_ACCESS_KEY_VALUE }}
  AWS_DEFAULT_REGION: eu-west-2
  # Automatically generated token unique to this repo per workflow execution
  REPO_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Explicitly provided token in ORG to access entire organisation
  ORG_GITHUB_TOKEN: ${{ secrets.SUDOBLARK_GITHUB_TOKEN }}

on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  validation:
    strategy:
      matrix:
        folder: [
          "./infrastructure/modules/additional_s3_files",
          "./infrastructure/modules/api_gateway_rest_api",
          "./infrastructure/modules/application_registry",
          "./infrastructure/modules/iam_roles",
          "./infrastructure/modules/lambda",
          "./infrastructure/modules/s3_bucket",
          "./infrastructure/sudoblark"
        ]
    name: Terraform validate for ${{ matrix.folder }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ env.REPO_GITHUB_TOKEN }}

      - name: terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: ${{ matrix.folder }}

  linting:
    strategy:
      matrix:
        folder: [
          "./infrastructure/modules/additional_s3_files",
          "./infrastructure/modules/api_gateway_rest_api",
          "./infrastructure/modules/application_registry",
          "./infrastructure/modules/iam_roles",
          "./infrastructure/modules/lambda",
          "./infrastructure/modules/s3_bucket",
          "./infrastructure/sudoblark"
        ]
    name: Terraform lint for ${{ matrix.folder }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ env.REPO_GITHUB_TOKEN }}

      - name: Install tflint
        uses: terraform-linters/setup-tflint@v3

      - name: Run tflint
        run: tflint
        working-directory: ${{ matrix.folder }}

  plan:
    strategy:
      matrix:
        folder: [
          "./infrastructure/sudoblark"
        ]
    name: Terraform plan for ${{ matrix.folder }}
    runs-on: ubuntu-20.04
    needs: [validation, linting]
    steps:
      - uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ env.REPO_GITHUB_TOKEN }}

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: zip lambdas
        run: |
          cd application/backend-lambda
              zip lambda.zip backend_lambda/ -r
              zip lambda.zip config.ini -r
              mkdir src
              mv lambda.zip src

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        env:
          GITHUB_TOKEN: ${{ env.REPO_GITHUB_TOKEN }}
        with:
          path: ${{ matrix.folder }}